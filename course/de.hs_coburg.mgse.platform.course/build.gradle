dependencies {
	compile project(":de.hs_coburg.mgse.platform.glossary")
	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
}
configurations {
	mwe2 {
		extendsFrom compile
	}
}

dependencies {
	mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.9.0.201605261059"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 "org.eclipse.xtext:xtext-antlr-generator:[2.1.1, 3)"
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/de/hs_coburg/mgse/platform/course/GenerateCourseModel.mwe2"
	inputs.file "src/de/hs_coburg/mgse/platform/course/CourseModel.xtext"
	outputs.dir "src-gen"
	args += "src/de/hs_coburg/mgse/platform/course/GenerateCourseModel.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

task buildStandalone(type: Jar) {
	destinationDir = file("$rootDir/$standaloneBuildPath")
	manifest {
        attributes 'Implementation-Title': 'Course Standalone Application',  
        	'Implementation-Version': version,
        	'Main-Class': 'de.hs_coburg.mgse.platform.course.generator.Main'
    }
	baseName = project.name + '-standalone'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
		 exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
	}
	with jar
}

generateXtext.dependsOn(generateXtextLanguage)
buildStandalone.dependsOn(generateXtext)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
//this is an eclipse plugin project
eclipseClasspath.enabled=false
cleanEclipseClasspath.enabled=false
