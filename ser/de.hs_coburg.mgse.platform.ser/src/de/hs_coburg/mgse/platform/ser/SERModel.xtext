grammar de.hs_coburg.mgse.platform.ser.SERModel with org.eclipse.xtext.common.Terminals

generate sERModel "http://www.hs_coburg.de/mgse/platform/ser/SERModel"
import 'http://www.hs_coburg.de/mgse/platform/glossary/GlossaryModel' as glossary
import 'http://www.hs_coburg.de/mgse/platform/course/CourseModel' as course

Model:
	StudyExaminationRegulations | ExamTypeDeclarationList | CourseTypeDeclarationList
;

CourseTypeDeclarationList:
	'Lehrveranstaltungsarten' '['
		(courseTypeDeclarations+=CourseTypeDeclaration)+
	']'
;

CourseTypeDeclaration:
	'Typ' name=ID
	'Details' details=[glossary::GlossaryEntry|FQN]
;

StudyExaminationRegulations:
	'SPO' name=ID
	'Studiengang' course=[course::CourseOfStudies|FQN]
	'Version' version=INT // Should be used as Primary Key
	'Gueltigkeitsdatum' date=DATE // Should be used as Primary Key
	'Titel' title=STRING
	'Vorwort' foreword=STRING
	'Paragraphen' '['
		(paragraphs+=Paragraph)+
	']'
	('Fussnoten' '['
		(footnotes+=Footnote)+
	']')?
	'Studienabschnitte' '['
		(studySections+=StudySection)+
	']'
;

StudySection:
	'Startsemester' firstSemester=INT
	'Endsemester' lastSemester=INT
	'Bezeichnung' completeName=STRING
	'Modules' '['
		(modules+=Module)+
	']' 
;

Module:
	'Modul' name=ID
	'ECTS' ects=INT
	'Gewichtung' quantifier=DOUBLE
	'SWS' semesterHours=INT
	'Modulart' moduleType=STRING
	(('Details' details=[glossary::GlossaryEntry|FQN]) | ('Anzahl' count=INT))
	'Pruefungsarten' '['
		(examTypes+=ExamType)+
	']'
	'Lehrveranstaltungsarten' '['
		(courseTypes+=[CourseTypeDeclaration|FQN]) (',' (courseTypes+=[CourseTypeDeclaration|FQN]))*
	']'
;

ExamType:
	'Name' name=ID
	'Pruefungsart' examTypeDeclaration=[ExamTypeDeclaration|FQN]
	'[' lowerBound=INT ('bis' upperBound=INT)? ']'
;

ExamTypeDeclaration:
	'Typ' name=ID
	'Details' details=[glossary::GlossaryEntry|FQN]
	'Einheit' unit=STRING
;

ExamTypeDeclarationList:
	'Pruefungsarten' '['
		(examTypeDeclarations+=ExamTypeDeclaration)+
	']'
;

Footnote:
	'[' name=ID ']:' text=STRING
;

Paragraph:
	'Start'
		'§' number=INT
		'Titel' title=STRING
		((sentences+=Sentence)+ | (subParagraphs+=SubParagraph)+)
	'Ende'
	
;

SubParagraph:
	'§§' number=INT
	(sentences+=Sentence)+
;

Sentence:
	'-' text=RichText
	('[' 'Fussnoten:' footnotes+=[Footnote|FQN] (',' footnotes+=[Footnote|FQN])* ']')?
;

RichText:
	(literals+=RichTextLiteral)+
;

RichTextLiteral:
	text=STRING | RichTextReference
;

RichTextReference:
	reference=[glossary::GlossaryEntry|FQN]
;

DATE:
	day=INT '.' month=Month year=INT
;

enum Month:
	JANUARY='Januar' 	| FEBRUARY='Februar'	| MARCH='Maerz' |
	APRIL='April' 		| MAY='Mai' 			| JUNE='Juni' |
	JULY='Juli'			| AUGUST='August'		| SEPTEMBER='September' |
	OCTOBER='Oktober'	| NOVEMBER='November'	| DECEMBER='Dezember'
;

FQN: ID (('.') ID)*;

DOUBLE: INT (('.') INT)?;